esphome:
  name: co2meter
  platform: ESP8266
  board: nodemcuv2

wifi:
  ssid: !secret wifi_network
  password: !secret wifi_password

api:
  password: CHANGE_ME_API_PASSWORD
  services:
    - service: mhz19_calibrate_zero
      then:
        - mhz19.calibrate_zero: my_mhz19

logger:

ota:
  password: CHANGE_ME_OTA_PASSWORD

uart:
  rx_pin: D1
  tx_pin: D4
  baud_rate: 9600

spi:
  clk_pin: D5
  mosi_pin: D7

time:
  - platform: homeassistant
    id: esptime

sensor:
  - platform: mhz19
    id: my_mhz19
    co2:
      id: mhz_co2
      name: "Co2Meter CO2 Value"
    temperature:
      name: "Co2Meter Temperature mhz"
    update_interval: 20s
    automatic_baseline_calibration: false
  - platform: dht
    id: my_dht
    pin: D6
    model: DHT11
    temperature:
      id: dht_temp
      name: "Co2Meter Temperature dht"
    humidity:
      id: dht_humidity
      name: "Co2Meter Humidity"
    update_interval: 20s

font:
  - file: "fonts/unscii-8-mcr.ttf"
    id: unscii_mcr
    size: 40
  - file: "fonts/unscii-8-thin.ttf"
    id: unscii_thin
    size: 15

switch:
  - platform: template
    id: display_on
    name: "Co2Meter Display"
    optimistic: true

display:
  - platform: ssd1306_spi
    id: my_display
    model: "SH1106 128x64"
    cs_pin: D8
    dc_pin: D2
    reset_pin: 10
    lambda: |-
      if (!id(display_on).state) {
        return;
      }
      auto time = id(esptime).now();
      it.strftime(64, 10, id(unscii_mcr), TextAlign::TOP_CENTER, (time.second % 2 == 0 ? "%H:%M" : "%H %M"), time);
      it.printf(0, 50, id(unscii_thin), "%4.0fppm %2.0fÂ° %2.0f%%", id(mhz_co2).state, id(dht_temp).state, id(dht_humidity).state);

status_led:
  pin:
    number: GPIO13
    inverted: yes

